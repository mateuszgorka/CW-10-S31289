// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TripsAPI.Data;

#nullable disable

namespace TripsAPI.Migrations
{
    [DbContext(typeof(TripsDbContext))]
    [Migration("20250605095108_AddSeedData")]
    partial class AddSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Country_Trip", b =>
                {
                    b.Property<int>("IdCountry")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.HasKey("IdCountry", "IdTrip");

                    b.HasIndex("IdTrip");

                    b.ToTable("Country_Trip");

                    b.HasData(
                        new
                        {
                            IdCountry = 1,
                            IdTrip = 1
                        },
                        new
                        {
                            IdCountry = 2,
                            IdTrip = 2
                        });
                });

            modelBuilder.Entity("TripsAPI.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pesel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdClient");

                    b.ToTable("Client", (string)null);

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            Email = "john@example.com",
                            FirstName = "John",
                            LastName = "Smith",
                            Pesel = "90010112345",
                            Telephone = "123-456-789"
                        },
                        new
                        {
                            IdClient = 2,
                            Email = "anna@example.com",
                            FirstName = "Anna",
                            LastName = "Kowalska",
                            Pesel = "92020298765",
                            Telephone = "987-654-321"
                        });
                });

            modelBuilder.Entity("TripsAPI.Models.ClientTrip", b =>
                {
                    b.Property<int>("IdClient")
                        .HasColumnType("int");

                    b.Property<int>("IdTrip")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RegisteredAt")
                        .HasColumnType("datetime2");

                    b.HasKey("IdClient", "IdTrip");

                    b.HasIndex("IdTrip");

                    b.ToTable("Client_Trip", (string)null);

                    b.HasData(
                        new
                        {
                            IdClient = 1,
                            IdTrip = 1,
                            PaymentDate = new DateTime(2025, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            RegisteredAt = new DateTime(2025, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            IdClient = 2,
                            IdTrip = 2,
                            RegisteredAt = new DateTime(2025, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("TripsAPI.Models.Country", b =>
                {
                    b.Property<int>("IdCountry")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCountry"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCountry");

                    b.ToTable("Country", (string)null);

                    b.HasData(
                        new
                        {
                            IdCountry = 1,
                            Name = "Italy"
                        },
                        new
                        {
                            IdCountry = 2,
                            Name = "Germany"
                        });
                });

            modelBuilder.Entity("TripsAPI.Models.Trip", b =>
                {
                    b.Property<int>("IdTrip")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTrip"));

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxPeople")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTrip");

                    b.ToTable("Trip", (string)null);

                    b.HasData(
                        new
                        {
                            IdTrip = 1,
                            DateFrom = new DateTime(2025, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2025, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trip to Rome",
                            MaxPeople = 20,
                            Name = "Rome"
                        },
                        new
                        {
                            IdTrip = 2,
                            DateFrom = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateTo = new DateTime(2025, 8, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Trip to Berlin",
                            MaxPeople = 25,
                            Name = "Berlin"
                        });
                });

            modelBuilder.Entity("Country_Trip", b =>
                {
                    b.HasOne("TripsAPI.Models.Country", null)
                        .WithMany()
                        .HasForeignKey("IdCountry")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripsAPI.Models.Trip", null)
                        .WithMany()
                        .HasForeignKey("IdTrip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TripsAPI.Models.ClientTrip", b =>
                {
                    b.HasOne("TripsAPI.Models.Client", "Client")
                        .WithMany("ClientTrips")
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TripsAPI.Models.Trip", "Trip")
                        .WithMany("ClientTrips")
                        .HasForeignKey("IdTrip")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Trip");
                });

            modelBuilder.Entity("TripsAPI.Models.Client", b =>
                {
                    b.Navigation("ClientTrips");
                });

            modelBuilder.Entity("TripsAPI.Models.Trip", b =>
                {
                    b.Navigation("ClientTrips");
                });
#pragma warning restore 612, 618
        }
    }
}
